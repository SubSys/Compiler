module Core.Basics.Arithmetic
    exposing
        ( plus
        , (+)
        , (*)
        , (^)
        , (/)
        , (//)
        )


import Helm.Compiler.Sudo.Native


(+) : Int -> Int -> Int
(+) left right =
    Helm.Compiler.Sudo.Native.plusInt left right


(+) : Float -> Float -> Float
(+) left right =
    Helm.Compiler.Sudo.Native.plusFloat left right


(-) : Int -> Int -> Int
(-) left right =
    Helm.Compiler.Sudo.Native.subInt left right


(-) : Float -> Float -> Float
(-) left right =
    Helm.Compiler.Sudo.Native.subFloat left right


(*) : Int -> Int -> Int
(*) left right =
    Helm.Compiler.Sudo.Native.mulInt left right


(*) : Float -> Float -> Float
(*) left right =
    Helm.Compiler.Sudo.Native.mulFloat left right


(^) : Int -> Int -> Int
(^) left right =
    Helm.Compiler.Sudo.Native.expInt left right


(^) : Float -> Float -> Float
(^) left right =
    Helm.Compiler.Sudo.Native.expFloat left right


(/) : Float -> Float -> Float
(/) left right =
    Helm.Compiler.Sudo.Native.floatDiv left right


(//) : Int -> Int -> Int
(//) left right =
    Helm.Compiler.Sudo.Native.intDiv left right

plus : Int -> Int -> Int
plus x y =
    x + y


