module Basic.Evaluation exposing (..)

import Native.Core


infixl 6 +

(+) : number -> number -> number
(+) =
  Native.Core.add


beta x y z =
    x + y + z

gamma z =
    beta 1 2 z


delta x = 1 + x

epsilon = delta 1

zeta = 1




type Maybe a
    = Nothing
    | Just a

type Either a b
    = Left a
    | Right b


type Result error value
    = Err error
    | Ok value



type Lister a = Empty | Node a Lister



type Color = Red | Green | Blue



