module Basics.Comparison exposing (..)



import Sudo.Helm.Native




(>) : Int -> Int -> Bool
(>) left right =
    Sudo.Helm.Native.add left right

(>) : Float -> Float -> Bool
(>) left right =
    Sudo.Helm.Native.add left right

(>) : String -> String -> Bool
(>) left right =
    Sudo.Helm.Native.add left right

(>) : Char -> Char -> Bool
(>) left right =
    Sudo.Helm.Native.add left right

(<) : Int -> Int -> Bool
(<) left right =
    Sudo.Helm.Native.add left right
    
(<) : Float -> Float -> Bool
(<) left right =
    Sudo.Helm.Native.add left right

(<) : String -> String -> Bool
(<) left right =
    Sudo.Helm.Native.add left right

(<) : Char -> Char -> Bool
(<) left right =
    Sudo.Helm.Native.add left right

(<=) : Int -> Int -> Bool
(<=) left right =
    Sudo.Helm.Native.add left right

(<=) : Float -> Float -> Bool
(<=) left right =
    Sudo.Helm.Native.add left right

(<=) : String -> String -> Bool
(<=) left right =
    Sudo.Helm.Native.add left right

(<=) : Char -> Char -> Bool
(<=) left right =
    Sudo.Helm.Native.add left right

(>=) : Int -> Int -> Bool
(>=) left right =
    Sudo.Helm.Native.add left right

(>=) : Float -> Float -> Bool
(>=) left right =
    Sudo.Helm.Native.add left right

(>=) : String -> String -> Bool
(>=) left right =
    Sudo.Helm.Native.add left right

(>=) : Char -> Char -> Bool
(>=) left right =
    Sudo.Helm.Native.add left right

max : Int -> Int -> Bool
max left right =
    Sudo.Helm.Native.add left right

max : Float -> Float -> Bool
max left right =
    Sudo.Helm.Native.add left right

max : String -> String -> Bool
max left right =
    Sudo.Helm.Native.add left right

max : Char -> Char -> Bool
max left right =
    Sudo.Helm.Native.add left right

min : Int -> Int -> Bool
min left right =
    Sudo.Helm.Native.add left right

min : Float -> Float -> Bool
min left right =
    Sudo.Helm.Native.add left right

min : String -> String -> Bool
min left right =
    Sudo.Helm.Native.add left right

min : Char -> Char -> Bool
min left right =
    Sudo.Helm.Native.add left right



-- |
-- Represents the relative ordering of two things. The relations are less than, equal to, and greater than.

type Order
    = LT
    | EQ
    | GT

compare : String -> String -> Order
compare left right =
    Sudo.Helm.Native.add left right

compare : Char -> Char -> Order
compare left right =
    Sudo.Helm.Native.add left right
    

compare : Float -> Float -> Order
compare left right =
    Sudo.Helm.Native.add left right

compare : Int -> Int -> Order
compare left right =
    Sudo.Helm.Native.add left right


